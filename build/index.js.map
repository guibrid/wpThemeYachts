{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///external {\"this\":[\"wp\",\"element\"]}"],"names":["registerBlockType","wp","blocks","blockEditor","RichText","InspectorControls","ColorPalette","MediaUpload","components","PanelBody","Button","RangeControl","title","description","icon","category","attributes","edit","save","type","setAttributes","updateTitle","event","target","value","source","selector","titleColor","default","subtitle","onChangeTitle","newTitle","onChangeSubtitle","newSubtitle","onTitleColorChange","newColor","marginBottom","color","body","backgroundImage","overlayColor","overlayOpacity","onChangeBody","newBody","onSelectImage","newImage","console","log","sizes","full","url","onOverlayColor","onOverlayOpacity","newOpacity","open","marginTop","backgroundSize","backgroundPosition","backgroundRepeat","background","opacity"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const { registerBlockType } = wp.blocks;\r\nconst { RichText,\r\n        InspectorControls,\r\n        ColorPalette,\r\n        MediaUpload\r\n} = wp.blockEditor;\r\nconst { PanelBody,\r\n        Button,\r\n        RangeControl\r\n } = wp.components\r\n\r\nregisterBlockType('alecaddd/custom-cta', {\r\n    title: 'Call to Action',\r\n    description: 'Block to generate a custom Call to Action',\r\n    icon: 'format-image',\r\n    category: 'layout',\r\n\r\n    // custom attributes\r\n    attributes: {},\r\n\r\n    // custom functions\r\n\r\n    edit() {\r\n\r\n        return <div>Hello World</div>\r\n        \r\n    },\r\n\r\n    save() {}\r\n});\r\n\r\nregisterBlockType('alecaddd/custom-cta2', {\r\n    title: 'Call to Action 2',\r\n    description: 'Block to generate a custom Call to Action',\r\n    icon: 'format-image',\r\n    category: 'layout',\r\n\r\n    // custom attributes\r\n    attributes: {\r\n        title: {\r\n            type: 'string'\r\n        }\r\n    },\r\n\r\n    edit({ attributes, setAttributes }) {\r\n        // custom functions\r\n        function updateTitle(event) {\r\n            //console.log(event.target.value);\r\n            setAttributes( { title: event.target.value } )\r\n        }\r\n\r\n\r\n        return <input value={ attributes.title } onChange={ updateTitle } type=\"text\" />\r\n        \r\n    },\r\n\r\n    save({ attributes }) {\r\n\r\n        return <p>Title is : <i>{ attributes.title }</i></p>\r\n\r\n    }\r\n});\r\n\r\nregisterBlockType('alecaddd/custom-titre-style2', {\r\n    title: 'Titre - Style 2',\r\n    description: 'Block pour créer titre de la page',\r\n    icon: 'format-image',\r\n    category: 'layout',\r\n\r\n    // custom attributes\r\n    attributes: {\r\n        title: {\r\n            type: 'string',\r\n            source: 'html',\r\n            selector: 'h1'\r\n        },\r\n        titleColor: {\r\n            type: 'string',\r\n            default: '#C69C6C'\r\n        },\r\n        subtitle: {\r\n            type: 'string',\r\n            source: 'html',\r\n            selector: 'p'\r\n        }\r\n    },\r\n\r\n    edit({ attributes, setAttributes }) {\r\n        const {\r\n            title,\r\n            subtitle,\r\n            titleColor\r\n        } = attributes;\r\n\r\n        // custom functions\r\n        function onChangeTitle(newTitle) {\r\n            setAttributes( { title: newTitle } )\r\n        }\r\n\r\n        function onChangeSubtitle(newSubtitle) {\r\n            setAttributes( { subtitle: newSubtitle } )\r\n        }\r\n\r\n        function onTitleColorChange(newColor) {\r\n            setAttributes( { titleColor: newColor } )\r\n        }\r\n\r\n\r\n        return ([\r\n            <InspectorControls style={ { marginBottom: '40px' } }>\r\n                <PanelBody title={ 'Title color' }>\r\n                    <p><strong>Select title color:</strong></p>\r\n                    <ColorPalette value={ titleColor }\r\n                                  onChange={ onTitleColorChange } />\r\n                </PanelBody>\r\n            </InspectorControls>,\r\n            <div class=\"titre-h1-style2\">\r\n                <RichText key=\"editable\"\r\n                          tagName=\"h2\"\r\n                          placeholder=\"Votre titre\"\r\n                          value={ title }\r\n                          onChange={ onChangeTitle }\r\n                          style={ { color: titleColor } } />\r\n                <RichText key=\"editable\"\r\n                          tagName=\"p\"\r\n                          placeholder=\"Votre sous-titre\"\r\n                          value={ subtitle }\r\n                          onChange={ onChangeSubtitle } />\r\n            </div>\r\n\r\n        ]);\r\n        \r\n    },\r\n\r\n    save({ attributes }) {\r\n        const {\r\n            title,\r\n            subtitle,\r\n            titleColor\r\n        } = attributes;\r\n\r\n        return (\r\n            <div class=\"titre-h1-style2\">\r\n                <h2 style={ { color: titleColor } }>{ title }</h2>\r\n                <RichText.Content tagName=\"p\" \r\n                                  value={ subtitle } />\r\n            </div>\r\n        );\r\n\r\n    }\r\n});\r\n\r\nregisterBlockType('alecaddd/custom-cta4', {\r\n    title: 'Call to Action 4',\r\n    description: 'Block to generate a custom Call to Action',\r\n    icon: 'format-image',\r\n    category: 'layout',\r\n\r\n    // custom attributes\r\n    attributes: {\r\n        title: {\r\n            type: 'string',\r\n            source: 'html',\r\n            selector: 'h2'\r\n        },\r\n        titleColor: {\r\n            type: 'string',\r\n            default: 'black'\r\n        },\r\n        body: {\r\n            type: 'string',\r\n            source: 'html',\r\n            selector: 'p'\r\n        },\r\n        backgroundImage: {\r\n            type: 'string',\r\n            default: null\r\n        },\r\n        overlayColor: {\r\n            type: 'string',\r\n            default: 'black'\r\n        },\r\n        overlayOpacity:{\r\n            type: 'number',\r\n            default: 0.3\r\n        }\r\n    },\r\n\r\n    edit({ attributes, setAttributes }) {\r\n        const {\r\n            title,\r\n            body,\r\n            titleColor,\r\n            backgroundImage,\r\n            overlayColor,\r\n            overlayOpacity\r\n        } = attributes;\r\n\r\n        // custom functions\r\n        function onChangeTitle(newTitle) {\r\n            setAttributes( { title: newTitle } );\r\n        }\r\n\r\n        function onChangeBody(newBody) {\r\n            setAttributes( { body: newBody } );\r\n        }\r\n\r\n        function onTitleColorChange(newColor) {\r\n            setAttributes( { titleColor: newColor } );\r\n        }\r\n\r\n        function onSelectImage(newImage) {\r\n            console.log(newImage);\r\n            setAttributes( { backgroundImage: newImage.sizes.full.url } );\r\n        }\r\n\r\n        function onOverlayColor(newColor) {\r\n            console.log(newColor);\r\n            setAttributes( { overlayColor: newColor } );\r\n        }\r\n\r\n        function onOverlayOpacity(newOpacity) {\r\n            console.log(newOpacity);\r\n            setAttributes( { overlayOpacity: newOpacity } );\r\n        }\r\n\r\n\r\n        return ([\r\n            <InspectorControls style={ { marginBottom: '40px' } }>\r\n                <PanelBody title={ 'Title color' }>\r\n                    <p><strong>Select title color:</strong></p>\r\n                    <ColorPalette value={ titleColor }\r\n                                  onChange={ onTitleColorChange } />\r\n                </PanelBody>\r\n                <PanelBody title={ 'Background image settings'}>\r\n                    <p><strong>Select a Background Image</strong></p>\r\n                    <MediaUpload\r\n                        onSelect={ onSelectImage }\r\n                        //allowedTypes={ ['image'] }\r\n                        type='image'\r\n                        value={ backgroundImage }\r\n                        multiple='true'\r\n                        render={ ( { open } ) => (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName=\"editor-media-placeholder__button is-button is-default is-large\"\r\n\t\t\t\t\t\t\t\ticon=\"upload\"\r\n\t\t\t\t\t\t\t\tonClick={ open }>\r\n\t\t\t\t\t\t\t\t Background Image\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}/>\r\n                    <div style={{marginTop: '20px', marginBottom: '40px'}}>\r\n                        <p>Overlay color:</p>\r\n                        <ColorPalette value={ overlayColor }\r\n                                  onChange={ onOverlayColor } />\r\n                    </div>\r\n                    <RangeControl \r\n                        label={ 'Overlay opacity'}\r\n                        value={ overlayOpacity }\r\n                        onChange={ onOverlayOpacity }\r\n                        min={ 0 }\r\n                        max={ 1 }\r\n                        step= { 0.05 } /> \r\n                </PanelBody>\r\n            </InspectorControls>,\r\n            <div className=\"cta-container\" style={{\r\n                backgroundImage: `url(${backgroundImage})`,\r\n                backgroundSize: 'cover',\r\n                backgroundPosition: 'center',\r\n                backgroundRepeat: 'no-repeat'\r\n            }}>\r\n            <div className=\"cta-overlay\" style={ {background:overlayColor, opacity:overlayOpacity}}></div>\r\n                <RichText key=\"editable\"\r\n                          tagName=\"h2\"\r\n                          placeholder=\"Your Title\"\r\n                          value={ title }\r\n                          onChange={ onChangeTitle }\r\n                          style={ { color: titleColor } } />\r\n                <RichText key=\"editable\"\r\n                          tagName=\"p\"\r\n                          placeholder=\"Your body\"\r\n                          value={ body }\r\n                          onChange={ onChangeBody } />\r\n            </div>\r\n\r\n        ]);\r\n        \r\n    },\r\n\r\n    save({ attributes }) {\r\n        const {\r\n            title,\r\n            body,\r\n            titleColor,\r\n            backgroundImage,\r\n            overlayColor,\r\n            overlayOpacity\r\n        } = attributes;\r\n\r\n        return (\r\n            <div className=\"cta-container\" style={{\r\n                backgroundImage: `url(${backgroundImage})`,\r\n                backgroundSize: 'cover',\r\n                backgroundPosition: 'center',\r\n                backgroundRepeat: 'no-repeat'\r\n            }}>\r\n            <div className=\"cta-overlay\" style={ {background:overlayColor, opacity:overlayOpacity}}></div>\r\n                <h2 style={ { color: titleColor } }>{ title }</h2>\r\n                <RichText.Content tagName=\"p\" \r\n                                  value={ body } />\r\n            </div>\r\n        );\r\n\r\n    }\r\n});","(function() { module.exports = this[\"wp\"][\"element\"]; }());"],"sourceRoot":""}